pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/etaoko333/SkyeBank-Project.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonarqube') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=skyebank \
                    -Dsonar.projectKey=skyebank '''
                }
            }
        }
        stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage('OWASP Dependency Check') {
            steps {
                sh 'export NVD_API_KEY=$NVD_API_KEY && dependency-check.sh --update'  // Update the NVD database
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'  // Publish the report
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . &gt; trivyfs.txt"
            }
        }
        stage("Docker Build &amp; Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){
                       sh "docker build -t skyebank ."
                       sh "docker tag skyebank sholly333/reddit:latest "
                       sh "docker push sholly333/skyebank:latest "
                    }
                }
            }
        }
        stage("TRIVY"){
            steps{
                sh "trivy image sholly333/skyebank:latest &gt; trivy.txt"
            }
        }
        stage('Deploy to container'){
            steps{
                sh 'docker run -d --name skyebank -p 3000:3000 sholly333/skyebank:latest'
            }
        }
    }
}
