name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set Up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache
          restore-keys: |
            ${{ runner.os }}-sonar-cache

      - name: Install SonarQube Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip -d $HOME
          export PATH=$HOME/sonar-scanner
      
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: '6.0.x'

      - name: OWASP Dependency Check
        run: |
          curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v8.2.1/dependency-check-8.2.1-release.zip
          unzip dependency-check-8.2.1-release.zip
          chmod +x dependency-check/bin/dependency-check.sh
          dependency-check/bin/dependency-check.sh --scan ./ --disableYarnAudit --disableNodeAudit --format "XML" --out dependency-check-report.xml

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report.xml

      - name: Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          output: 'trivyfs.txt'

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sholly333/skyebank:latest

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'image'
          scan-ref: 'sholly333/skyebank:latest'
          format: 'table'
          output: 'trivy.txt'

      - name: Deploy to Container
        run: |
          docker run -d --name skyebank -p 3000:3000 sholly333/skyebank:latest
